Starting Saturation...
Executing from DLGP files
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
# Rules: 98; # Atoms: 0; # AtomSets: 0; # Queries: 0; # Constraints: 0
Full TGD saturation algorithm: GSat
Running GSat...
avr. 26, 2021 6:39:06 PM uk.ac.ox.cs.gsat.EvolveBasedSat run
INFOS: GSat discarded rules : 0/97 = 0.000%
GSat discarded rules : 0/97 = 0.000%
avr. 26, 2021 6:39:06 PM uk.ac.ox.cs.gsat.EvolveBasedSat run
INFOS: Subsumption method : tree_atom
avr. 26, 2021 6:39:06 PM uk.ac.ox.cs.gsat.EvolveBasedSat run
INFOS: # initial TGDs: 93 , 4
nonFullTGDs	0		fullTGDs	93			newNonFullTGDs	4		newFullTGDs	0
avr. 26, 2021 6:39:07 PM uk.ac.ox.cs.gsat.EvolveBasedSat run
INFOS: GSat total time : 194 ms = 0.19 s
avr. 26, 2021 6:39:07 PM uk.ac.ox.cs.gsat.EvolveBasedSat run
INFOS: Subsumed elements : 17
avr. 26, 2021 6:39:07 PM uk.ac.ox.cs.gsat.EvolveBasedSat run
INFOS: Filter discarded elements : 0
avr. 26, 2021 6:39:07 PM uk.ac.ox.cs.gsat.EvolveBasedSat run
INFOS: Derived full/non full TGDs: 10 , 8
avr. 26, 2021 6:39:07 PM uk.ac.ox.cs.gsat.EvolveBasedSat run
INFOS: ouptput full TGDs not contained in the input: 1
avr. 26, 2021 6:39:07 PM uk.ac.ox.cs.gsat.App executeAllSteps
INFOS: Rewriting completed!
Full TGD saturation: (94 dependecies)
=========================================
has_capability(GSat_u2,GSat_u1) → Capability(GSat_u1)
capability_semantics(GSat_u2,GSat_u1) → wsaExtensions.owl#Capability_Semantics(GSat_u1)
sd_service_semantics(GSat_u2,GSat_u1) → sd_service_semantics_of(GSat_u1,GSat_u2)
desired_goal_state(GSat_u1,GSat_u2) → Goal_State(GSat_u1)
Service(GSat_u1) → wsaResourceModel.owl#Resource(GSat_u1)
Requester_Agent(GSat_u1) → Agent(GSat_u1)
sd_expressed_in(GSat_u2,GSat_u1) → wsaExtensions.owl#ServiceDescriptionLanguage(GSat_u1)
service_role(GSat_u1,GSat_u2) → Service(GSat_u1)
sd_service_semantics_of(GSat_u2,GSat_u1) → sd_service_semantics(GSat_u1,GSat_u2)
perform_task(GSat_u2,GSat_u1) → Service_Task(GSat_u1)
policy(GSat_u1,GSat_u2) → Service(GSat_u1)
uses(GSat_u2,GSat_u1) → Service_Interface(GSat_u1)
provided_by(GSat_u1,GSat_u2) → Service(GSat_u1)
service_semantics(GSat_u1,GSat_u2) → Service(GSat_u1)
associated_with(GSat_u1,GSat_u2) → Service_Role(GSat_u1)
service_interface(GSat_u1,GSat_u2) → Service(GSat_u1)
capability_semantics(GSat_u1,GSat_u2) → Capability(GSat_u1)
request_service(GSat_u2,GSat_u1) → Service(GSat_u1)
service_description(GSat_u1,GSat_u2) → Service(GSat_u1)
sd_expressed_in(GSat_u1,GSat_u2) → Service_Description(GSat_u1)
realize_service(GSat_u2,GSat_u1) → Service(GSat_u1)
wsaProvider_Entity(GSat_u2) & wsaPolicyModel.owl#owner(GSat_u2,GSat_u1) → Provider_Agent(GSat_u1)
define(GSat_u1,GSat_u2) → Service_Interface(GSat_u1)
realize_service(GSat_u2,GSat_u1) → realized_by(GSat_u1,GSat_u2)
owned_by(GSat_u2,GSat_u1) → wsaPolicyModel.owl#Person_or_Organization(GSat_u1)
provided_by(GSat_u2,GSat_u1) → wsaPolicyModel.owl#Person_or_Organization(GSat_u1)
has_owner(GSat_u2,GSat_u1) → wsaPolicyModel.owl#owner(GSat_u1,GSat_u2)
expressedIn(GSat_u1,GSat_u2) → Choreography(GSat_u1)
policy(GSat_u2,GSat_u1) → wsaPolicyModel.owl#Policy(GSat_u1)
SendingAction(GSat_u1) → Action(GSat_u1)
result(GSat_u2,GSat_u1) → Goal_State(GSat_u1)
service_semantics_of(GSat_u2,GSat_u1) → service_semantics(GSat_u1,GSat_u2)
sd_service_semantics(GSat_u1,GSat_u2) → Service_Description(GSat_u1)
Service_Task(GSat_u1) → Action(GSat_u1)
wsaGoal_State(GSat_u1) → wsaExtensions.owl#State(GSat_u1)
sd_service_interface(GSat_u2,GSat_u1) → Service_Interface(GSat_u1)
desired_goal_state(GSat_u2,GSat_u1) → wsaPolicyModel.owl#Person_or_Organization(GSat_u1)
define(GSat_u2,GSat_u1) → MessageModelMessage(GSat_u1)
st_service_interface(GSat_u2,GSat_u1) → Service_Interface(GSat_u1)
uses(GSat_u1,GSat_u2) → Choreography(GSat_u1)
Agent(GSat_u1) → wsaResourceModel.owl#Resource(GSat_u1)
service_description_of(GSat_u2,GSat_u1) → service_description(GSat_u1,GSat_u2)
sd_service_interface(GSat_u1,GSat_u2) → Service_Description(GSat_u1)
realized_by(GSat_u2,GSat_u1) → realize_service(GSat_u1,GSat_u2)
Agent(GSat_u1) → wsaExtensions.owl#Computational_Resource(GSat_u1)
has_role(GSat_u2,GSat_u1) → Service_Role(GSat_u1)
preserves(GSat_u2,GSat_u1) → wsaExtensions.owl#Message_Semantics(GSat_u1)
request_service(GSat_u1,GSat_u2) → Agent(GSat_u1)
service_semantics(GSat_u2,GSat_u1) → Service_Semantics(GSat_u1)
realize_service(GSat_u1,GSat_u2) → Agent(GSat_u1)
request_service(GSat_u2,GSat_u1) → used_by(GSat_u1,GSat_u2)
has_capability(GSat_u1,GSat_u2) → Service_Description(GSat_u1)
Service_Intermediary(GSat_u1) → Service(GSat_u1)
service_semantics(GSat_u2,GSat_u1) → service_semantics_of(GSat_u1,GSat_u2)
advertised_by(GSat_u2,GSat_u1) → Capability(GSat_u1)
owned_by(GSat_u1,GSat_u2) → Service(GSat_u1)
preserves(GSat_u1,GSat_u2) → Service_Intermediary(GSat_u1)
service_interface(GSat_u2,GSat_u1) → Service_Interface(GSat_u1)
Requester_Entity(GSat_u1) → wsaPolicyModel.owl#Person_or_Organization(GSat_u1)
service_identifier(GSat_u2,GSat_u1) → wsaResourceModel.owl#Identifier(GSat_u1)
perform_task(GSat_u1,GSat_u2) → Service(GSat_u1)
result(GSat_u1,GSat_u2) → Action(GSat_u1)
has_identifier(GSat_u2,GSat_u1) → wsaResourceModel.owl#Identifier(GSat_u1)
has_role(GSat_u1,GSat_u2) → Service_Intermediary(GSat_u1)
wsaRequester_Entity(GSat_u2) & wsaPolicyModel.owl#owner(GSat_u2,GSat_u1) → Requester_Agent(GSat_u1)
st_service_interface(GSat_u1,GSat_u2) → Service_Task(GSat_u1)
sr_defined_by(GSat_u2,GSat_u1) → wsaPolicyModel.owl#Person_or_Organization(GSat_u1)
has_identifier(GSat_u1,GSat_u2) → Capability(GSat_u1)
wsaService(GSat_u1) → Service(GSat_u1)
expressedIn(GSat_u2,GSat_u1) → wsaExtensions.owl#ChoreographyDescriptionLanguage(GSat_u1)
associated_with(GSat_u2,GSat_u1) → Service_Task(GSat_u1)
service_role(GSat_u2,GSat_u1) → Service_Role(GSat_u1)
ra_acts_on_behalf(GSat_u2,GSat_u1) → Requester_Entity(GSat_u1)
ra_acts_on_behalf(GSat_u1,GSat_u2) → Requester_Agent(GSat_u1)
service_identifier(GSat_u1,GSat_u2) → Service(GSat_u1)
sr_defined_by(GSat_u1,GSat_u2) → Service_Role(GSat_u1)
service_description(GSat_u2,GSat_u1) → Service_Description(GSat_u1)
Service_Role(GSat_u1) → Service_Task(GSat_u1)
used_by(GSat_u2,GSat_u1) → request_service(GSat_u1,GSat_u2)
Provider_Agent(GSat_u1) → Agent(GSat_u1)
sd_service_semantics(GSat_u2,GSat_u1) → Service_Semantics(GSat_u1)
required_by(GSat_u1,GSat_u2) → Agent(GSat_u1)
service_description(GSat_u2,GSat_u1) → service_description_of(GSat_u1,GSat_u2)
advertised_by(GSat_u1,GSat_u2) → Agent(GSat_u1)
pa_acts_on_behalf(GSat_u1,GSat_u2) → Provider_Agent(GSat_u1)
pa_acts_on_behalf(GSat_u2,GSat_u1) → Provider_Entity(GSat_u1)
required_by(GSat_u2,GSat_u1) → Capability(GSat_u1)
Provider_Entity(GSat_u1) → wsaPolicyModel.owl#Person_or_Organization(GSat_u1)
ss_described_in(GSat_u1,GSat_u2) → Service_Semantics(GSat_u1)
offers(GSat_u1,GSat_u2) → Provider_Entity(GSat_u1)
ss_described_in(GSat_u2,GSat_u1) → wsaExtensions.owl#ServiceSemanticsDescriptionLanguage(GSat_u1)
ProcessingAction(GSat_u1) → Action(GSat_u1)
offers(GSat_u2,GSat_u1) → Service(GSat_u1)
wsaPolicyModel.owl#owner(GSat_u2,GSat_u1) → has_owner(GSat_u1,GSat_u2)
=========================================
