Starting Saturation...
Executing from DLGP files
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
# Rules: 98; # Atoms: 0; # AtomSets: 0; # Queries: 0; # Constraints: 0
Full TGD saturation algorithm: Skolemized Sat
Running SkSat...
avr. 27, 2021 1:42:32 PM uk.ac.ox.cs.gsat.EvolveBasedSat run
INFOS: SkSat discarded rules : 0/97 = 0.000%
SkSat discarded rules : 0/97 = 0.000%
avr. 27, 2021 1:42:32 PM uk.ac.ox.cs.gsat.EvolveBasedSat run
INFOS: Subsumption method : tree_atom
avr. 27, 2021 1:42:32 PM uk.ac.ox.cs.gsat.EvolveBasedSat run
INFOS: # initial TGDs: 93 , 4
nonFullTGDs	0		fullTGDs	93			newNonFullTGDs	4		newFullTGDs	0
avr. 27, 2021 1:42:32 PM uk.ac.ox.cs.gsat.EvolveBasedSat run
INFOS: GSat total time : 270 ms = 0.27 s
avr. 27, 2021 1:42:32 PM uk.ac.ox.cs.gsat.EvolveBasedSat run
INFOS: Subsumed elements : 4
avr. 27, 2021 1:42:32 PM uk.ac.ox.cs.gsat.EvolveBasedSat run
INFOS: Filter discarded elements : 0
avr. 27, 2021 1:42:32 PM uk.ac.ox.cs.gsat.EvolveBasedSat run
INFOS: Derived full/non full TGDs: 4 , 9
avr. 27, 2021 1:42:32 PM uk.ac.ox.cs.gsat.EvolveBasedSat run
INFOS: ouptput full TGDs not contained in the input: 1
avr. 27, 2021 1:42:32 PM uk.ac.ox.cs.gsat.App executeAllSteps
INFOS: Rewriting completed!
Full TGD saturation: (94 dependecies)
=========================================
policy(SkSat_u2,SkSat_u1) → wsaPolicyModel.owl#Policy(SkSat_u1)
owned_by(SkSat_u2,SkSat_u1) → wsaPolicyModel.owl#Person_or_Organization(SkSat_u1)
define(SkSat_u1,SkSat_u2) → Service_Interface(SkSat_u1)
service_semantics(SkSat_u2,SkSat_u1) → Service_Semantics(SkSat_u1)
desired_goal_state(SkSat_u2,SkSat_u1) → wsaPolicyModel.owl#Person_or_Organization(SkSat_u1)
has_owner(SkSat_u2,SkSat_u1) → wsaPolicyModel.owl#owner(SkSat_u1,SkSat_u2)
result(SkSat_u2,SkSat_u1) → Goal_State(SkSat_u1)
Service(SkSat_u1) → wsaResourceModel.owl#Resource(SkSat_u1)
result(SkSat_u1,SkSat_u2) → Action(SkSat_u1)
pa_acts_on_behalf(SkSat_u2,SkSat_u1) → Provider_Entity(SkSat_u1)
perform_task(SkSat_u2,SkSat_u1) → Service_Task(SkSat_u1)
advertised_by(SkSat_u1,SkSat_u2) → Agent(SkSat_u1)
service_description(SkSat_u1,SkSat_u2) → Service(SkSat_u1)
service_interface(SkSat_u1,SkSat_u2) → Service(SkSat_u1)
provided_by(SkSat_u1,SkSat_u2) → Service(SkSat_u1)
service_role(SkSat_u2,SkSat_u1) → Service_Role(SkSat_u1)
has_identifier(SkSat_u2,SkSat_u1) → wsaResourceModel.owl#Identifier(SkSat_u1)
wsaPolicyModel.owl#owner(SkSat_u2,SkSat_u1) → has_owner(SkSat_u1,SkSat_u2)
sd_service_semantics(SkSat_u2,SkSat_u1) → Service_Semantics(SkSat_u1)
sd_expressed_in(SkSat_u2,SkSat_u1) → wsaExtensions.owl#ServiceDescriptionLanguage(SkSat_u1)
ProcessingAction(SkSat_u1) → Action(SkSat_u1)
st_service_interface(SkSat_u2,SkSat_u1) → Service_Interface(SkSat_u1)
uses(SkSat_u2,SkSat_u1) → Service_Interface(SkSat_u1)
offers(SkSat_u1,SkSat_u2) → Provider_Entity(SkSat_u1)
realized_by(SkSat_u2,SkSat_u1) → realize_service(SkSat_u1,SkSat_u2)
has_role(SkSat_u1,SkSat_u2) → Service_Intermediary(SkSat_u1)
Requester_Entity(SkSat_u1) → wsaPolicyModel.owl#Person_or_Organization(SkSat_u1)
ss_described_in(SkSat_u2,SkSat_u1) → wsaExtensions.owl#ServiceSemanticsDescriptionLanguage(SkSat_u1)
Agent(SkSat_u1) → wsaExtensions.owl#Computational_Resource(SkSat_u1)
owned_by(SkSat_u1,SkSat_u2) → Service(SkSat_u1)
define(SkSat_u2,SkSat_u1) → MessageModelMessage(SkSat_u1)
service_description(SkSat_u2,SkSat_u1) → service_description_of(SkSat_u1,SkSat_u2)
service_interface(SkSat_u2,SkSat_u1) → Service_Interface(SkSat_u1)
has_role(SkSat_u2,SkSat_u1) → Service_Role(SkSat_u1)
desired_goal_state(SkSat_u1,SkSat_u2) → Goal_State(SkSat_u1)
offers(SkSat_u2,SkSat_u1) → Service(SkSat_u1)
request_service(SkSat_u2,SkSat_u1) → used_by(SkSat_u1,SkSat_u2)
realize_service(SkSat_u2,SkSat_u1) → Service(SkSat_u1)
service_identifier(SkSat_u1,SkSat_u2) → Service(SkSat_u1)
sd_expressed_in(SkSat_u1,SkSat_u2) → Service_Description(SkSat_u1)
wsaGoal_State(SkSat_u1) → wsaExtensions.owl#State(SkSat_u1)
has_capability(SkSat_u2,SkSat_u1) → Capability(SkSat_u1)
used_by(SkSat_u2,SkSat_u1) → request_service(SkSat_u1,SkSat_u2)
SendingAction(SkSat_u1) → Action(SkSat_u1)
wsaPolicyModel.owl#owner(SkSat_u2,SkSat_u1) & wsaRequester_Entity(SkSat_u2) → Requester_Agent(SkSat_u1)
service_description(SkSat_u2,SkSat_u1) → Service_Description(SkSat_u1)
service_description_of(SkSat_u2,SkSat_u1) → service_description(SkSat_u1,SkSat_u2)
preserves(SkSat_u1,SkSat_u2) → Service_Intermediary(SkSat_u1)
request_service(SkSat_u2,SkSat_u1) → Service(SkSat_u1)
provided_by(SkSat_u2,SkSat_u1) → wsaPolicyModel.owl#Person_or_Organization(SkSat_u1)
ra_acts_on_behalf(SkSat_u1,SkSat_u2) → Requester_Agent(SkSat_u1)
service_semantics(SkSat_u2,SkSat_u1) → service_semantics_of(SkSat_u1,SkSat_u2)
Agent(SkSat_u1) → wsaResourceModel.owl#Resource(SkSat_u1)
perform_task(SkSat_u1,SkSat_u2) → Service(SkSat_u1)
Requester_Agent(SkSat_u1) → Agent(SkSat_u1)
ss_described_in(SkSat_u1,SkSat_u2) → Service_Semantics(SkSat_u1)
has_capability(SkSat_u1,SkSat_u2) → Service_Description(SkSat_u1)
service_semantics_of(SkSat_u2,SkSat_u1) → service_semantics(SkSat_u1,SkSat_u2)
associated_with(SkSat_u1,SkSat_u2) → Service_Role(SkSat_u1)
service_semantics(SkSat_u1,SkSat_u2) → Service(SkSat_u1)
realize_service(SkSat_u1,SkSat_u2) → Agent(SkSat_u1)
Provider_Entity(SkSat_u1) → wsaPolicyModel.owl#Person_or_Organization(SkSat_u1)
sr_defined_by(SkSat_u2,SkSat_u1) → wsaPolicyModel.owl#Person_or_Organization(SkSat_u1)
required_by(SkSat_u2,SkSat_u1) → Capability(SkSat_u1)
realize_service(SkSat_u2,SkSat_u1) → realized_by(SkSat_u1,SkSat_u2)
service_role(SkSat_u1,SkSat_u2) → Service(SkSat_u1)
policy(SkSat_u1,SkSat_u2) → Service(SkSat_u1)
ra_acts_on_behalf(SkSat_u2,SkSat_u1) → Requester_Entity(SkSat_u1)
uses(SkSat_u1,SkSat_u2) → Choreography(SkSat_u1)
sd_service_interface(SkSat_u2,SkSat_u1) → Service_Interface(SkSat_u1)
Service_Role(SkSat_u1) → Service_Task(SkSat_u1)
preserves(SkSat_u2,SkSat_u1) → wsaExtensions.owl#Message_Semantics(SkSat_u1)
associated_with(SkSat_u2,SkSat_u1) → Service_Task(SkSat_u1)
sd_service_semantics(SkSat_u1,SkSat_u2) → Service_Description(SkSat_u1)
capability_semantics(SkSat_u1,SkSat_u2) → Capability(SkSat_u1)
sd_service_interface(SkSat_u1,SkSat_u2) → Service_Description(SkSat_u1)
required_by(SkSat_u1,SkSat_u2) → Agent(SkSat_u1)
pa_acts_on_behalf(SkSat_u1,SkSat_u2) → Provider_Agent(SkSat_u1)
wsaPolicyModel.owl#owner(SkSat_u2,SkSat_u1) & wsaProvider_Entity(SkSat_u2) → Provider_Agent(SkSat_u1)
Provider_Agent(SkSat_u1) → Agent(SkSat_u1)
expressedIn(SkSat_u2,SkSat_u1) → wsaExtensions.owl#ChoreographyDescriptionLanguage(SkSat_u1)
wsaService(SkSat_u1) → Service(SkSat_u1)
sd_service_semantics_of(SkSat_u2,SkSat_u1) → sd_service_semantics(SkSat_u1,SkSat_u2)
expressedIn(SkSat_u1,SkSat_u2) → Choreography(SkSat_u1)
capability_semantics(SkSat_u2,SkSat_u1) → wsaExtensions.owl#Capability_Semantics(SkSat_u1)
advertised_by(SkSat_u2,SkSat_u1) → Capability(SkSat_u1)
sd_service_semantics(SkSat_u2,SkSat_u1) → sd_service_semantics_of(SkSat_u1,SkSat_u2)
has_identifier(SkSat_u1,SkSat_u2) → Capability(SkSat_u1)
st_service_interface(SkSat_u1,SkSat_u2) → Service_Task(SkSat_u1)
request_service(SkSat_u1,SkSat_u2) → Agent(SkSat_u1)
Service_Task(SkSat_u1) → Action(SkSat_u1)
sr_defined_by(SkSat_u1,SkSat_u2) → Service_Role(SkSat_u1)
service_identifier(SkSat_u2,SkSat_u1) → wsaResourceModel.owl#Identifier(SkSat_u1)
Service_Intermediary(SkSat_u1) → Service(SkSat_u1)
=========================================
